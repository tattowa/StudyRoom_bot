{"ast":null,"code":"var _jsxFileName = \"/Users/junwookim/Desktop/StudyBot_discord/discord_study_bot/frontend/src/components/WeeklyUsageChart.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ReferenceLine } from \"recharts\";\nimport styled from \"styled-components\";\nimport channelColors from \"../config/channelColors.json\";\nconst ChartContainer = styled.div`\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 800px;\n  margin: auto;\n`;\nfunction WeeklyUsageChart() {\n  const [data, setData] = useState([]);\n  const [averageUsage, setAverageUsage] = useState(0);\n  const [channelColorMapping, setChannelColorMapping] = useState({});\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/v1/weekly-usage\", {\n      mode: \"cors\"\n    }).then(res => res.json()).then(json => {\n      const today = new Date();\n      const last7Days = [...Array(7)].map((_, i) => {\n        const d = new Date();\n        d.setDate(today.getDate() - (6 - i));\n        return d.toISOString().split(\"T\")[0];\n      });\n      const pivot = last7Days.reduce((acc, date) => {\n        acc[date] = {\n          date\n        };\n        return acc;\n      }, {});\n      let totalHours = 0;\n      const chMapping = {};\n      json.forEach(({\n        date,\n        channel_id,\n        channel_name,\n        duration_hour\n      }) => {\n        if (!pivot[date]) pivot[date] = {\n          date\n        };\n        pivot[date][channel_name] = duration_hour;\n        totalHours += duration_hour;\n        chMapping[channel_name] = channel_id;\n      });\n      setAverageUsage(totalHours / 7);\n\n      // channel_name → color マッピングを作成\n      const chColorMapping = Object.fromEntries(Object.keys(chMapping).map(chName => [chName, channelColors[chMapping[chName]] || \"#cccccc\"]));\n      setChannelColorMapping(chColorMapping);\n      setData(Object.values(pivot));\n    }).catch(console.error);\n  }, []);\n\n  // X軸のラベル描画\n  const renderDateTick = ({\n    x,\n    y,\n    payload\n  }) => {\n    const day = new Date(payload.value).getDay();\n    return /*#__PURE__*/React.createElement(\"g\", {\n      transform: `translate(${x}, ${y})`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      x: 0,\n      y: 0,\n      dy: 16,\n      textAnchor: \"middle\",\n      fill: day === 0 || day === 6 ? \"red\" : \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, payload.value));\n  };\n  const channelKeys = Array.from(new Set(data.flatMap(item => Object.keys(item).filter(key => key !== \"date\"))));\n  return /*#__PURE__*/React.createElement(ChartContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCE6 \\u9031\\u9593\\u30C1\\u30E3\\u30F3\\u30CD\\u30EB\\u4F7F\\u7528\\u6642\\u9593\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 350,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: data,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"date\",\n    tick: renderDateTick,\n    interval: 0,\n    angle: -30,\n    dx: -10,\n    dy: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    label: {\n      value: \"使用時間 (時間)\",\n      angle: -90,\n      position: \"insideLeft\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceLine, {\n    y: averageUsage,\n    stroke: \"red\",\n    strokeDasharray: \"3 3\",\n    label: \"\\u5E73\\u5747\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), channelKeys.map(chName => /*#__PURE__*/React.createElement(Bar, {\n    key: chName,\n    dataKey: chName,\n    stackId: \"weekly\",\n    fill: channelColorMapping[chName],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default WeeklyUsageChart;","map":{"version":3,"names":["React","useEffect","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ReferenceLine","styled","channelColors","ChartContainer","div","WeeklyUsageChart","data","setData","averageUsage","setAverageUsage","channelColorMapping","setChannelColorMapping","fetch","mode","then","res","json","today","Date","last7Days","Array","map","_","i","d","setDate","getDate","toISOString","split","pivot","reduce","acc","date","totalHours","chMapping","forEach","channel_id","channel_name","duration_hour","chColorMapping","Object","fromEntries","keys","chName","values","catch","console","error","renderDateTick","x","y","payload","day","value","getDay","createElement","transform","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","dy","textAnchor","fill","channelKeys","from","Set","flatMap","item","filter","key","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","tick","interval","angle","dx","label","position","stroke","stackId"],"sources":["/Users/junwookim/Desktop/StudyBot_discord/discord_study_bot/frontend/src/components/WeeklyUsageChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  ReferenceLine,\n} from \"recharts\";\nimport styled from \"styled-components\";\nimport channelColors from \"../config/channelColors.json\"\n\n\nconst ChartContainer = styled.div`\n  background: white;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 800px;\n  margin: auto;\n`;\n\nfunction WeeklyUsageChart() {\n  const [data, setData] = useState([]);\n  const [averageUsage, setAverageUsage] = useState(0);\n  const [channelColorMapping, setChannelColorMapping] = useState({});\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/v1/weekly-usage\", { mode: \"cors\" })\n      .then((res) => res.json())\n      .then((json) => {\n        const today = new Date();\n        const last7Days = [...Array(7)].map((_, i) => {\n          const d = new Date();\n          d.setDate(today.getDate() - (6 - i));\n          return d.toISOString().split(\"T\")[0];\n        });\n\n        const pivot = last7Days.reduce((acc, date) => {\n          acc[date] = { date };\n          return acc;\n        }, {});\n        \n        let totalHours = 0;\n        const chMapping = {};\n\n        json.forEach(({ date, channel_id, channel_name, duration_hour }) => {\n          if (!pivot[date]) pivot[date] = { date };\n          pivot[date][channel_name] = duration_hour;\n          totalHours += duration_hour;\n          chMapping[channel_name] = channel_id;\n        });\n\n        setAverageUsage(totalHours / 7);\n\n        // channel_name → color マッピングを作成\n        const chColorMapping = Object.fromEntries(\n            Object.keys(chMapping).map((chName) => [\n              chName,\n              channelColors[chMapping[chName]] || \"#cccccc\",\n            ])\n          );\n        setChannelColorMapping(chColorMapping);\n        setData(Object.values(pivot));\n      })\n      .catch(console.error);\n  }, []);\n\n  // X軸のラベル描画\n  const renderDateTick = ({ x, y, payload }) => {\n    const day = new Date(payload.value).getDay();\n    return (\n      <g transform={`translate(${x}, ${y})`}>\n        <text x={0} y={0} dy={16} textAnchor=\"middle\" fill={day === 0 || day === 6 ? \"red\" : \"black\"}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  const channelKeys = Array.from(\n    new Set(data.flatMap((item) => Object.keys(item).filter((key) => key !== \"date\")))\n  );\n\n  return (\n    <ChartContainer>\n      <h3>📦 週間チャンネル使用時間</h3>\n      <ResponsiveContainer width=\"100%\" height={350}>\n        <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 10 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" tick={renderDateTick} interval={0} angle={-30} dx={-10} dy={5} />\n          <YAxis label={{ value: \"使用時間 (時間)\", angle: -90, position: \"insideLeft\" }} />\n          <Tooltip />\n          <Legend />\n          <ReferenceLine y={averageUsage} stroke=\"red\" strokeDasharray=\"3 3\" label=\"平均\" />\n          {channelKeys.map((chName) => (\n            <Bar key={chName} dataKey={chName} stackId=\"weekly\" fill={channelColorMapping[chName]} />\n          ))}\n        </BarChart>\n      </ResponsiveContainer>\n    </ChartContainer>\n  );\n}\n\nexport default WeeklyUsageChart;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,QAAQ,EACRC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,EACnBC,aAAa,QACR,UAAU;AACjB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,aAAa,MAAM,8BAA8B;AAGxD,MAAMC,cAAc,GAAGF,MAAM,CAACG,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASC,gBAAgBA,CAAA,EAAG;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACmB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElED,SAAS,CAAC,MAAM;IACdsB,KAAK,CAAC,2CAA2C,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC,CACjEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAK;MACd,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;MACxB,MAAMC,SAAS,GAAG,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC5C,MAAMC,CAAC,GAAG,IAAIN,IAAI,CAAC,CAAC;QACpBM,CAAC,CAACC,OAAO,CAACR,KAAK,CAACS,OAAO,CAAC,CAAC,IAAI,CAAC,GAAGH,CAAC,CAAC,CAAC;QACpC,OAAOC,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC;MAEF,MAAMC,KAAK,GAAGV,SAAS,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;QAC5CD,GAAG,CAACC,IAAI,CAAC,GAAG;UAAEA;QAAK,CAAC;QACpB,OAAOD,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MAEN,IAAIE,UAAU,GAAG,CAAC;MAClB,MAAMC,SAAS,GAAG,CAAC,CAAC;MAEpBlB,IAAI,CAACmB,OAAO,CAAC,CAAC;QAAEH,IAAI;QAAEI,UAAU;QAAEC,YAAY;QAAEC;MAAc,CAAC,KAAK;QAClE,IAAI,CAACT,KAAK,CAACG,IAAI,CAAC,EAAEH,KAAK,CAACG,IAAI,CAAC,GAAG;UAAEA;QAAK,CAAC;QACxCH,KAAK,CAACG,IAAI,CAAC,CAACK,YAAY,CAAC,GAAGC,aAAa;QACzCL,UAAU,IAAIK,aAAa;QAC3BJ,SAAS,CAACG,YAAY,CAAC,GAAGD,UAAU;MACtC,CAAC,CAAC;MAEF3B,eAAe,CAACwB,UAAU,GAAG,CAAC,CAAC;;MAE/B;MACA,MAAMM,cAAc,GAAGC,MAAM,CAACC,WAAW,CACrCD,MAAM,CAACE,IAAI,CAACR,SAAS,CAAC,CAACb,GAAG,CAAEsB,MAAM,IAAK,CACrCA,MAAM,EACNzC,aAAa,CAACgC,SAAS,CAACS,MAAM,CAAC,CAAC,IAAI,SAAS,CAC9C,CACH,CAAC;MACHhC,sBAAsB,CAAC4B,cAAc,CAAC;MACtChC,OAAO,CAACiC,MAAM,CAACI,MAAM,CAACf,KAAK,CAAC,CAAC;IAC/B,CAAC,CAAC,CACDgB,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,cAAc,GAAGA,CAAC;IAAEC,CAAC;IAAEC,CAAC;IAAEC;EAAQ,CAAC,KAAK;IAC5C,MAAMC,GAAG,GAAG,IAAIlC,IAAI,CAACiC,OAAO,CAACE,KAAK,CAAC,CAACC,MAAM,CAAC,CAAC;IAC5C,oBACEjE,KAAA,CAAAkE,aAAA;MAAGC,SAAS,EAAE,aAAaP,CAAC,KAAKC,CAAC,GAAI;MAAAO,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpCzE,KAAA,CAAAkE,aAAA;MAAMN,CAAC,EAAE,CAAE;MAACC,CAAC,EAAE,CAAE;MAACa,EAAE,EAAE,EAAG;MAACC,UAAU,EAAC,QAAQ;MAACC,IAAI,EAAEb,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,OAAQ;MAAAK,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC1FX,OAAO,CAACE,KACL,CACL,CAAC;EAER,CAAC;EAED,MAAMa,WAAW,GAAG9C,KAAK,CAAC+C,IAAI,CAC5B,IAAIC,GAAG,CAAC9D,IAAI,CAAC+D,OAAO,CAAEC,IAAI,IAAK9B,MAAM,CAACE,IAAI,CAAC4B,IAAI,CAAC,CAACC,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAK,MAAM,CAAC,CAAC,CACnF,CAAC;EAED,oBACEnF,KAAA,CAAAkE,aAAA,CAACpD,cAAc;IAAAsD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbzE,KAAA,CAAAkE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iFAAkB,CAAC,eACvBzE,KAAA,CAAAkE,aAAA,CAACxD,mBAAmB;IAAC0E,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CzE,KAAA,CAAAkE,aAAA,CAAC/D,QAAQ;IAACc,IAAI,EAAEA,IAAK;IAACqE,MAAM,EAAE;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAtB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzEzE,KAAA,CAAAkE,aAAA,CAAC3D,aAAa;IAACoF,eAAe,EAAC,KAAK;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvCzE,KAAA,CAAAkE,aAAA,CAAC7D,KAAK;IAACuF,OAAO,EAAC,MAAM;IAACC,IAAI,EAAElC,cAAe;IAACmC,QAAQ,EAAE,CAAE;IAACC,KAAK,EAAE,CAAC,EAAG;IAACC,EAAE,EAAE,CAAC,EAAG;IAACtB,EAAE,EAAE,CAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvFzE,KAAA,CAAAkE,aAAA,CAAC5D,KAAK;IAAC2F,KAAK,EAAE;MAAEjC,KAAK,EAAE,WAAW;MAAE+B,KAAK,EAAE,CAAC,EAAE;MAAEG,QAAQ,EAAE;IAAa,CAAE;IAAA9B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC5EzE,KAAA,CAAAkE,aAAA,CAAC1D,OAAO;IAAA4D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACXzE,KAAA,CAAAkE,aAAA,CAACzD,MAAM;IAAA2D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVzE,KAAA,CAAAkE,aAAA,CAACvD,aAAa;IAACkD,CAAC,EAAE1C,YAAa;IAACgF,MAAM,EAAC,KAAK;IAACR,eAAe,EAAC,KAAK;IAACM,KAAK,EAAC,cAAI;IAAA7B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAC/EI,WAAW,CAAC7C,GAAG,CAAEsB,MAAM,iBACtBtD,KAAA,CAAAkE,aAAA,CAAC9D,GAAG;IAAC+E,GAAG,EAAE7B,MAAO;IAACsC,OAAO,EAAEtC,MAAO;IAAC8C,OAAO,EAAC,QAAQ;IAACxB,IAAI,EAAEvD,mBAAmB,CAACiC,MAAM,CAAE;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzF,CACO,CACS,CACP,CAAC;AAErB;AAEA,eAAezD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}